@page "/offers"

@using KS.Application.Offers

@inject OfferClient OfferClient
@inject NavigationManager NavigationManager

<PageTitle>Offers</PageTitle>


<div class="d-flex justify-content-between align-items-center">
    <h3>Offers</h3>
    <button class="btn btn-success" @onclick="AddNewOffer">Add</button>
</div>
<br />
<br />

<Grid @ref="grid"
      TItem="OfferListDTO"
      AllowPaging="true"
      AllowSorting="true"
      Class="table table-hover table-bordered table-striped"
      DataProvider="OffersDataProvider"
      PageSize="@pageSize"
      Responsive="true"
      AllowRowClick="true"
      OnRowClick="OnRowClick"
>
    <GridColumns>
        <GridColumn TItem="OfferListDTO" HeaderText="Offer no." PropertyName="OfferNumber">
            @context.OfferNumber
        </GridColumn>
        <GridColumn TItem="OfferListDTO" HeaderText="Created on" PropertyName="CreatedOnUtc">
            @context.CreatedOnUtc
        </GridColumn>
        <GridColumn TItem="OfferListDTO" HeaderText="Delete">
            <button class="btn btn-sm btn-danger" @onclick="() => RemoveOffer(context)" @onclick:stopPropagation="true">
                <i class="bi bi-trash"></i>
            </button>
        </GridColumn>
    </GridColumns>
</Grid>


@code {
    Grid<OfferListDTO> grid = default!;
    private IEnumerable<OfferListDTO>? offers = default!;
    private int currentPage = 1;
    private const int pageSize = 3;
    private int totalOffers;

    private async Task<GridDataProviderResult<OfferListDTO>> OffersDataProvider(GridDataProviderRequest<OfferListDTO> request)
    {
        var response = await OfferClient.GetAllListAsyncPaginated(request.PageNumber, request.PageSize);

        offers = response.Data;
        totalOffers = response.TotalCount;

        return new GridDataProviderResult<OfferListDTO>
            {
                Data = offers,
                TotalCount = totalOffers
            };
    }

    private void OnRowClick(GridRowEventArgs<OfferListDTO> args)
    {
        NavigationManager.NavigateTo($"/edit-offer/{args.Item.Id}");
    }

    private void AddNewOffer()
    {
        NavigationManager.NavigateTo("/edit-offer/0");
    }

    private async void RemoveOffer(OfferListDTO article)
    {
        await OfferClient.DeleteAsync(article.Id);
        grid.RefreshDataAsync();
    }
}
